name: "Auto Generate Changesets"

on:
  push:
    branches: [main]
    paths:
      - packages/**

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-changeset:
    name: "Create changeset for modified packages"
    runs-on: ubuntu-latest
    # Skip if we already created one to avoid infinite loops
    if: ${{ !contains(github.event.head_commit.message, 'add changeset') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Detect changed packages
        id: changed
        shell: bash
        run: |
          set -euo pipefail
          if [ "$(git rev-parse --is-shallow-repository)" = "true" ]; then
            git fetch --prune --unshallow --quiet || true
          fi

          if [ "$(git rev-list --count HEAD)" -eq 1 ]; then
            echo "No previous commit to diff (first commit)." >&2
            echo "packages=" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          PACKAGES=$(git diff --name-only HEAD~1 HEAD | grep '^packages/' | cut -d'/' -f2 | sort -u | tr '\n' ' ' || true)
          echo "Detected packages: $PACKAGES" >&2
          echo "packages=$PACKAGES" >> "$GITHUB_OUTPUT"

      - name: Stop if no package changes
        if: steps.changed.outputs.packages == ''
        run: echo "No changed packages. Nothing to do." && exit 0

      - name: Determine version bump type
        id: bump
        shell: bash
        run: |
          set -euo pipefail
          COMMIT_MSG='${{ github.event.head_commit.message }}'
          if echo "$COMMIT_MSG" | grep -Eq '^feat.*!:|BREAKING'; then
            LEVEL=major
          elif echo "$COMMIT_MSG" | grep -Eq '^feat'; then
            LEVEL=minor
          else
            LEVEL=patch
          fi
          echo "Bump level determined: $LEVEL" >&2
          echo "level=$LEVEL" >> "$GITHUB_OUTPUT"

      - name: Create changeset file
        id: changeset
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p .changeset
          CHANGESET_ID="auto-${{ github.run_id }}-${{ github.run_attempt }}"
          FILE=".changeset/${CHANGESET_ID}.md"
          {
            echo '---'
            for pkg in ${{ steps.changed.outputs.packages }}; do
              case "$pkg" in
                playwright-framework)
                  echo '"@netanelh2/playwright-framework": ${{ steps.bump.outputs.level }}'
                  ;;
                create-playwright-project)
                  echo '"@netanelh2/create-playwright-project": ${{ steps.bump.outputs.level }}'
                  ;;
                create-workflows-package)
                  echo '"@netanelh2/create-workflows-package": ${{ steps.bump.outputs.level }}'
                  ;;
              esac
            done
            echo '---'
            echo
            echo "${{ github.event.head_commit.message }}" | head -n1
          } > "$FILE"

          echo "Created changeset file: $FILE" >&2
          echo "file=$FILE" >> "$GITHUB_OUTPUT"
          echo "changeset_id=$CHANGESET_ID" >> "$GITHUB_OUTPUT"
          echo "--- File contents ---" >&2
          cat "$FILE" >&2

      - name: Commit and push changeset
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .changeset
          if git diff --cached --quiet; then
            echo "No staged changes to commit." >&2
            exit 0
          fi
          git commit -m "chore: add changeset [skip ci]"
          git push
          echo "Changeset committed and pushed."

      - name: Summary
        if: steps.changed.outputs.packages != ''
        run: |
          echo "Packages changed: ${{ steps.changed.outputs.packages }}" >> "$GITHUB_STEP_SUMMARY"
          echo "Bump level: ${{ steps.bump.outputs.level }}" >> "$GITHUB_STEP_SUMMARY"
          echo "Changeset file: ${{ steps.changeset.outputs.file }}" >> "$GITHUB_STEP_SUMMARY"
