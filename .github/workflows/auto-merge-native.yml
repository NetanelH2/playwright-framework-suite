# Simplified Auto-merge using GitHub's native auto-merge feature
# This workflow enables auto-merge and auto-approves PRs when code quality passes

name: Auto-merge with GitHub Native

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_run:
    workflows: ["Code Quality Check"]
    types: [completed]

jobs:
  notify-external-pr:
    name: Notify External PR Needs Review
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false &&
      github.event.pull_request.state == 'open' &&
      github.event.pull_request.user.login != 'NetanelH2'
    permissions:
      pull-requests: write
      issues: write
    steps:
      - name: Notify manual review required
        uses: actions/github-script@v8
        with:
          script: |
            const pr = context.payload.pull_request;
            console.log(`üîç External PR detected #${pr.number}: "${pr.title}"`);
            console.log(`üë§ Author: ${pr.user.login}`);

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: 'üëã **Thanks for your contribution!**\n\n' +
                    'üîç **Manual review required** - This PR will be reviewed by the code owner\n' +
                    '‚è≥ **Code quality checks** - Will run automatically\n' +
                    '‚úÖ **After review** - Will be merged manually by @NetanelH2\n\n' +
                    'üí° *Auto-merge is only enabled for code owner PRs for security reasons.*'
            });

            console.log('‚úÖ Notification comment added for external PR');

  auto-approve-and-enable-merge:
    name: Auto-approve and Enable Merge
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false &&
      github.event.pull_request.state == 'open' &&
      github.event.pull_request.user.login == 'NetanelH2'
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Auto-approve and enable auto-merge
        uses: actions/github-script@v8
        with:
          script: |
            const pr = context.payload.pull_request;
            console.log(`üéØ Processing PR #${pr.number}: "${pr.title}"`);
            console.log(`üë§ Author: ${pr.user.login}`);

            try {
              // Auto-approve the PR
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                event: 'APPROVE',
                body: 'ü§ñ Auto-approved: Will merge when code quality checks pass ‚úÖ'
              });
              
              console.log('‚úÖ Auto-approval added');

              // Enable auto-merge
              await github.rest.pulls.enableAutoMerge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: 'SQUASH'
              });
              
              console.log('üîÑ Auto-merge enabled with squash method');

              // Add informational comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: 'ü§ñ **Auto-merge enabled!** ‚ö°\n\n' +
                      '‚úÖ **Auto-approved** - Ready to merge\n' +
                      'üîÑ **Auto-merge** - Will merge automatically when all checks pass\n' +
                      'üìã **Merge method** - Squash and merge\n\n' +
                      '‚è≥ Waiting for code quality checks to complete...'
              });

            } catch (error) {
              console.log(`‚ùå Error: ${error.message}`);
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `‚ö†Ô∏è **Auto-merge setup failed**: ${error.message}\n\n` +
                      'You may need to enable auto-merge manually or check repository settings.'
              });
            }

  merge-after-quality-check:
    name: Merge After Quality Check
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'workflow_run' &&
      github.event.workflow_run.name == 'Code Quality Check' &&
      github.event.workflow_run.conclusion == 'success'
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Find and merge PRs ready after quality check
        uses: actions/github-script@v8
        with:
          script: |
            const workflowRun = context.payload.workflow_run;
            console.log(`‚úÖ Code Quality Check completed successfully`);
            console.log(`üîç Head SHA: ${workflowRun.head_sha}`);

            // Find open PRs with this commit
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 100
            });

            const matchingPRs = prs.filter(pr => pr.head.sha === workflowRun.head_sha);

            for (const pr of matchingPRs) {
              console.log(`\nüéØ Found PR #${pr.number}: "${pr.title}"`);
              console.log(`üë§ Author: ${pr.user.login}`);

              // Only auto-merge PRs from code owner (NetanelH2)
              if (pr.user.login !== 'NetanelH2') {
                console.log('‚è∏Ô∏è Skipping auto-merge: Not from code owner. Manual review required.');
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: '‚úÖ **Code quality checks passed!**\n\n' +
                        'üë§ **Manual review required** - This PR is from an external contributor\n' +
                        'üîç **Action needed** - Code owner review required before merge\n\n' +
                        'üí° Only PRs from @NetanelH2 are auto-merged after quality checks pass.'
                });
                continue;
              }

              console.log('‚úÖ PR from code owner - proceeding with auto-merge');

              try {
                // Check if auto-merge is already enabled
                if (pr.auto_merge) {
                  console.log('üîÑ Auto-merge already enabled - GitHub will merge automatically');
                  continue;
                }

                // If not, try to enable it and approve
                const { data: reviews } = await github.rest.pulls.listReviews({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number
                });

                const hasApproval = reviews.some(review => review.state === 'APPROVED');
                
                if (!hasApproval) {
                  await github.rest.pulls.createReview({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: pr.number,
                    event: 'APPROVE',
                    body: 'ü§ñ Auto-approved: Code quality checks passed ‚úÖ'
                  });
                  console.log('‚úÖ Auto-approval added');
                }

                // Try to enable auto-merge
                await github.rest.pulls.enableAutoMerge({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number,
                  merge_method: 'SQUASH'
                });
                
                console.log('üîÑ Auto-merge enabled - will merge shortly');

                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: '‚úÖ **Code quality checks passed!**\n\n' +
                        'ü§ñ Auto-merge has been enabled and this PR will be merged automatically.'
                });

              } catch (error) {
                console.log(`‚ö†Ô∏è Could not enable auto-merge for PR #${pr.number}: ${error.message}`);
                
                // Try direct merge as fallback
                try {
                  await github.rest.pulls.merge({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: pr.number,
                    merge_method: 'squash',
                    commit_title: `${pr.title} (#${pr.number})`,
                    commit_message: 'Auto-merged after code quality checks passed'
                  });
                  
                  console.log('üéâ Merged directly as fallback');
                  
                } catch (mergeError) {
                  console.log(`‚ùå Direct merge also failed: ${mergeError.message}`);
                  
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pr.number,
                    body: `‚ö†Ô∏è **Auto-merge failed**: ${mergeError.message}\n\n` +
                          '‚úÖ Code quality checks passed but merge requires manual intervention.\n' +
                          'Please merge manually or check branch protection settings.'
                  });
                }
              }
            }
