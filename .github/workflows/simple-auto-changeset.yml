name: Simple Auto Changeset

on:
  push:
    branches: [main]
    paths:
      - 'packages/**'

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-changeset:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check if changeset needed
        id: check
        run: |
          # Skip if this is a release commit
          if [[ "${{ github.event.head_commit.message }}" == *"chore: release"* ]] || [[ "${{ github.event.head_commit.message }}" == *"Version Packages"* ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check if there are already pending changesets
          if ls .changeset/*.md 1> /dev/null 2>&1; then
            if [[ $(ls .changeset/*.md | wc -l) -gt 1 ]]; then  # More than just README.md
              echo "skip=true" >> $GITHUB_OUTPUT
              echo "Pending changesets already exist, skipping"
              exit 0
            fi
          fi

          echo "skip=false" >> $GITHUB_OUTPUT

      - name: Create automatic changeset
        if: steps.check.outputs.skip == 'false'
        run: |
          # Get packages that changed
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          PLAYWRIGHT_FRAMEWORK_CHANGED=false
          CLI_CHANGED=false

          if echo "$CHANGED_FILES" | grep -q "^packages/playwright-framework/"; then
            PLAYWRIGHT_FRAMEWORK_CHANGED=true
          fi

          if echo "$CHANGED_FILES" | grep -q "^packages/create-playwright-project/"; then
            CLI_CHANGED=true
          fi

          if [[ "$PLAYWRIGHT_FRAMEWORK_CHANGED" == false ]] && [[ "$CLI_CHANGED" == false ]]; then
            echo "No relevant package changes detected"
            exit 0
          fi

          # Create changeset
          CHANGESET_ID="auto-$(date +%s)"
          cat > ".changeset/${CHANGESET_ID}.md" << 'EOF'
          ---
          $(if [[ "$PLAYWRIGHT_FRAMEWORK_CHANGED" == true ]]; then echo '"@netanelh2/playwright-framework": patch'; fi)
          $(if [[ "$CLI_CHANGED" == true ]]; then echo '"@netanelh2/create-playwright-project": patch'; fi)
          ---

          Automated release: ${{ github.event.head_commit.message }}
          EOF

          # Fix the changeset file format
          if [[ "$PLAYWRIGHT_FRAMEWORK_CHANGED" == true ]] && [[ "$CLI_CHANGED" == true ]]; then
            cat > ".changeset/${CHANGESET_ID}.md" << 'EOF'
          ---
          "@netanelh2/playwright-framework": patch
          "@netanelh2/create-playwright-project": patch
          ---

          Automated release: ${{ github.event.head_commit.message }}
          EOF
          elif [[ "$PLAYWRIGHT_FRAMEWORK_CHANGED" == true ]]; then
            cat > ".changeset/${CHANGESET_ID}.md" << 'EOF'
          ---
          "@netanelh2/playwright-framework": patch
          ---

          Automated release: ${{ github.event.head_commit.message }}
          EOF
          elif [[ "$CLI_CHANGED" == true ]]; then
            cat > ".changeset/${CHANGESET_ID}.md" << 'EOF'
          ---
          "@netanelh2/create-playwright-project": patch
          ---

          Automated release: ${{ github.event.head_commit.message }}
          EOF
          fi

      - name: Commit changeset
        if: steps.check.outputs.skip == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .changeset/
          if git diff --staged --quiet; then
            echo "No changeset to commit"
          else
            git commit -m "chore: add changeset for automated release"
            git push
          fi
