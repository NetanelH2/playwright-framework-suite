name: Regression Tests

on:
  # Nightly regression tests at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'

  # Manual trigger
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for running tests manually'
        required: false
        default: 'Manual regression test run'

jobs:
  cleanup-storage:
    name: Cleanup Storage Before Tests
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 10
    steps:
      - name: Trigger artifact cleanup
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const response = await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'cleanup-artifacts.yml',
                ref: 'main',
                inputs: {
                  days_to_keep: '1',
                  dry_run: 'false'
                }
              });
              console.log('🧹 Triggered cleanup workflow before test run');
              
              // Wait a bit for cleanup to start
              await new Promise(resolve => setTimeout(resolve, 10000));
            } catch (error) {
              console.log(`⚠️ Failed to trigger cleanup: ${error.message}`);
            }

  setup-environment:
    name: Setup Test Environment
    runs-on: ubuntu-latest
    needs: cleanup-storage
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

  regression-tests:
    name: Run Regression Tests
    runs-on: ubuntu-latest
    needs: setup-environment
    continue-on-error: true
    timeout-minutes: 120
    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      TEST_TAGS: '@regression'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Regression Tests
        id: regression-tests
        run: npm run test:regression

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: regression-playwright-report-${{ github.run_number }}
          path: playwright-report/
          retention-days: 7
          if-no-files-found: warn

      - name: Fail workflow if tests failed
        if: steps.regression-tests.outcome == 'failure'
        run: |
          echo "::error::Regression tests failed. Check the report at https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/ for details."
          exit 1

  summary:
    name: Add Test Results Summary
    runs-on: ubuntu-latest
    needs: regression-tests
    if: always()
    timeout-minutes: 5
    steps:
      - name: Add test results to summary
        run: |
          echo "🌙 Regression Tests Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📦 Report name: regression-playwright-report-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⏰ Test completed at: $(date)" >> $GITHUB_STEP_SUMMARY
